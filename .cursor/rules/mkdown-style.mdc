---
alwaysApply: false
---
基於剛才簡化的文檔風格，我為您萃取出以下 **Markdown 風格規範**：

## 1. 標題層級規範

```markdown
# 主要章節標題 (H1) - 用於文檔主題
## 章節標題 (H2) - 用於主要段落
### 子章節標題 (H3) - 用於細分內容
#### 細項標題 (H4) - 僅在必要時使用
```

- 避免過深的標題層級 (最多到 H4)
- 標題後統一空一行

## 2. 強調與標記規範

**強調原則**：僅對真正重要的概念使用強調
- **粗體**：用於關鍵術語、重要概念（如：人類主導、AI 輔助）
- *斜體*：避免使用，減少視覺干擾
- `行內代碼`：用於技術術語、函數名、變數名

## 3. 列表格式規範

**無序列表**：統一使用 `-`
```markdown
- 第一項
- 第二項
- 第三項
```

**有序列表**：使用數字
```markdown
1. 第一步
2. 第二步
3. 第三步
```

**嵌套列表**：使用兩個空格縮排
```markdown
- 主要項目
  - 子項目
  - 子項目
- 另一個主要項目
```

## 4. 分隔線使用規範

僅在重要章節間使用 `---` 分隔：
```markdown
## 重要章節 A

內容...

---

## 重要章節 B

內容...
```

## 5. 文字格式規範

- **避免引用塊**：將原本的 `> 引用` 改為普通文字
- **段落間距**：重要段落間保留空行
- **冒號使用**：列表說明使用冒號後換行

```markdown
核心信念：
- 項目一
- 項目二
```

## 6. 代碼塊規範

使用明確的語言標記：
```markdown
```javascript
// JavaScript 代碼
```

```typescript
// TypeScript 代碼
```
```

## 7. 整體可讀性原則

1. **減少視覺噪音**：避免過度使用 `*`、`**`、`_` 等記號
2. **統一符號**：列表、強調、分隔線保持一致
3. **適當留白**：重要段落間保留空行提升可讀性
4. **層次清晰**：標題層級有邏輯順序
5. **內容優先**：記號服務於內容，而非裝飾

## 8. 實用範本

**標準段落結構**：
```markdown
## 主題標題

簡短介紹段落

核心要點：
- 要點一：具體說明
- 要點二：具體說明
- 要點三：具體說明

詳細說明段落，不使用過度標記。

### 子主題

1. 步驟一：具體行動
2. 步驟二：具體行動
3. 步驟三：具體行動
```

這套風格規範的核心目標是：**減少認知疲勞，提升文檔可讀性，讓內容本身成為重點**。