---
alwaysApply: false
description:
globs:
---
# 規則主題：Tailwind CSS 風格指南

> **簡短描述**：本文件定義了專案中 Tailwind CSS 的使用規範，包括響應式設計斷點、間距系統以及自訂樣式的方法。所有與樣式相關的開發都應遵循此指南。
> **最後更新**：2024-05-24

---

## 1. 核心原則

*   **UI 框架優先 (UI Framework First)**: 在開發 `pages/company/`, `pages/users/`, `pages/admin/` 目錄下的頁面時，應優先使用 **Element Plus** UI 框架來進行切版。
*   **Tailwind 為輔 (Utility-First as Secondary)**: 當 Element Plus 元件無法滿足需求，或開發非上述目錄的頁面時，才使用 Tailwind CSS utility classes 為主進行開發。
*   **遵循設計系統**: 嚴格遵守預設的響應式斷點與間距單位，確保所有頁面與元件的視覺表現一致。
*   **受控的客製化**: 僅在內建 utility 無法滿足設計稿要求時，才考慮在指定檔案中以受控的方式新增客製化樣式。

---

## 2. 規則詳述

### 2.1 響應式設計 (Responsive Design)
專案的響應式斷點 (breakpoint) 設定如下，這與 Tailwind CSS 的預設值 `md` 和 `xl` 對應：

*   **手機螢幕 (預設)**: 寬度小於 `768px` (不需要 class 前綴)
*   **平板螢幕 (`md`)**: 寬度 `768px` 以上 (使用 `md:` 前綴)
*   **桌面螢幕 (`xl`)**: 寬度 `1280px` 以上 (使用 `xl:` 前綴)

### 2.2 間距系統 (Spacing)
*   **優先使用預設值**: `padding`, `margin` 等所有間距相關參數，應優先使用 Tailwind 內建的間距單位 (例如 `p-4`, `m-6`)。
*   **客製化間距**: 如需新增客製化數值，應以 **4 的倍數** 為單位 (例如 `12px`, `20px`, `24px`)。這與 Tailwind 的 `rem` 單位系統 (`1rem = 16px`) 能夠良好配合。

### 2.3 自訂樣式 (Custom Styles)
*   如果分析需求後，判斷現有預設的 utility 無法實現設計稿的要求，可考慮在 `assets/css/main.css` 檔案中新增樣式。
*   建議使用 `@layer` 規則將自訂樣式添加到 Tailwind 的 `utilities` 層，使其能享有效能優化。

---

## 3. 程式碼範例 (Do's and Don'ts)

**✅ 正確範例：使用響應式前綴與標準間距**

```html
<!--
  手機上：padding 為 4 (16px)
  平板以上：padding 變為 6 (24px)
  桌面以上：padding 變為 8 (32px)
-->
<div class="p-4 md:p-6 xl:p-8">
  <!-- Content -->
</div>
```

**✅ 正確範例：在 `main.css` 中新增自訂 utility**

```css
/* in assets/css/main.css */

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .text-shadow-custom {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
  }
}
```

**❌ 錯誤範例：隨意使用魔術數字**

```html
<!-- 不應使用未經定義的任意數值 -->
<div class="p-[13px] m-[7px]">
  <!-- ... -->
</div>

<!-- 不應在 style 屬性中撰寫樣式 -->
<div style="padding: 13px; margin: 7px;">
  <!-- ... -->
</div>
```

---

如果使用到 element plus 元件，通常他們都有預設樣式，先請使用其預設樣式，與我討論後再決定是否加上 tailwind 自訂樣式，避免覆蓋 element plus 元件的預設樣式與行為。